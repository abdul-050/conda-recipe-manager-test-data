{% set version = "2.6.3" %}

package:
  name: ray-packages
  version: {{ version }}

source:
  url: https://github.com/ray-project/ray/archive/ray-{{ version }}.tar.gz
  sha256: 8cb87bc70fdc00c8c028906280e27f5139d6c7ebcee30f88f92beccfde296338
  patches:
    - patches/0001-Redis-deps-now-build-but-do-not-link.patch
    - patches/0002-Disable-making-entry-scripts.patch
    # - patches/0003-Add-bazel-linkopts-libs.patch
    - patches/0004-Ignore-warnings-in-event.cc-and-logging.cc.patch
    - patches/0005-Remove-all-dependencies-from-setup.py.patch
    - patches/0015-Don-t-build-redis-with-jemalloc-on-linux-aarch64.patch  # [linux and aarch64]
    - patches/0016-fix-redis-build-on-macos.patch  # [osx]
    - patches/0017-Don-t-use-Xcode-on-macOS.patch

build:
  number: 2
  skip: true  # [py<38 or py>=312]
  # skipping architectures that do not yet have bazel, so only build for linux64 & win64.
  # skipping osx and aarch64 for now, as there are complicated bazel errors with external redis (symbols, dependant libraries, and objects).
  skip: true  # [(linux and (s390x or ppc64le))]

# Need these up here to handle them properly.
requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - patch          # [not win]
    - m2-patch       # [win]
    - bazel =5.4.1
    - curl
    - git  # [not win]
    - m2-make   # [win]
    - make      # [not win]
    - pkg-config  # [osx or (linux and aarch64)]
    - patchelf  # [linux]
    - python  
    - sysroot_linux-64 2.17  # [linux and x86_64]
  host:
    - python
    - pip
    - cython >=0.29.32
    - pkg-config  # [osx]
    - setuptools
    - wheel

outputs:
  - name: ray-all
    build:
      # Until all of the ray-* packages are available in defaults, skipping the ray-all metapackage.
      skip: true
    requirements:
      host:
      run:
        - python
        - {{ pin_subpackage('ray-default', exact=True) }}
        # autoscaler is completely disabled for now as it's missing a bunch of dependencies
        # and there's not much interest in adding them (yet).
        # autoscaler does not work on Windows, no point of building it; see below
        # - {{ pin_subpackage('ray-autoscaler', exact=True) }}  # [not win]
        - {{ pin_subpackage('ray-dashboard', exact=True) }}
        - {{ pin_subpackage('ray-debug', exact=True) }}
        # ray-client turned off for now, see below
        #- {{ pin_subpackage('ray-client', exact=True) }}
        - {{ pin_subpackage('ray-rllib', exact=True) }}
        # ray-serve turned off for now, see below
        #- {{ pin_subpackage('ray-serve', exact=True) }}
        - {{ pin_subpackage('ray-tune', exact=True) }}
    test:
      imports:
        # dummy test; actual tests are in subpackages
        - ray

  - name: ray-core
    script: build-core.sh  # [not win]
    script: build-core.bat  # [win]
    build:
      skip: true  # [py<38]
    build:
      entry_points:
        - ray = ray.scripts.scripts:main
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - patch          # [not win]
        - m2-patch       # [win]
        - bazel =5.4.1
        - curl
        - git  # [not win]
        - m2-make   # [win]
        - make      # [not win]
        - pkg-config  # [osx or (linux and aarch64)]
        - patchelf  # [linux]
        - psutil
        - python
        - sysroot_linux-64 2.17  # [linux and x86_64]
      host:
        - python
        - openjdk =11
        - pip
        - pkg-config  # [osx]
        - cython >=0.29.32
        - setuptools
        - wheel
      run:
        - python
        - aiosignal
        - click >=7.0
        - colorama
        - filelock
        - frozenlist
        - grpcio >=1.42,<1.49
        - jsonschema
        - msgpack-python >=1.0.0,<2.0.0
        - numpy >=1.16    # [py<39]
        - numpy >=1.19.3  # [py>=39]
        - packaging
        - protobuf >=3.15.3,!=3.19.5
        - psutil
        - pyyaml
        - requests
        - setproctitle ==1.2.2
        # Needed because ray imports pkg_resources in multiple places.
        # Upstream deosn't declare it... Please remove as soon as it's not required
        # anymore (for example in the latest ray package).
        - setuptools

    test:
      imports:
        - ray
        - ray._raylet
        - ray.actor
        - ray.runtime_context
        - ray._private.state
        - ray._private.worker
      commands:
        - python -c "import ray; ray.init(include_dashboard=False)"
        - ray --help

  - name: ray-default
    build:
      skip: true  # [py<38]
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('ray-core', exact=True) }}
        - aiohttp >=3.7
        - aiohttp-cors
        - colorful
        - gpustat >=1.0.0
        - opencensus
        - prometheus_client >=0.7.1,<0.14.0
        - pydantic <2.0
        - jsonschema
        - requests
        - smart_open
        - py-spy >=0.2.0
        - virtualenv >=20.0.24,<20.21.1

    test:
      imports:
        # ray-default is a convenience wrapper with no imports of its own
        - ray
        # init-code seemingly depends on platform or other ambient things;
        # the following doesn't get triggered in CI, but was a problem in
        # https://github.com/conda-forge/ray-packages-feedstock/issues/16
        - ray._private.metrics_agent

  - name: ray-dashboard
    build:
      script:
        - cd python/ray/dashboard/client
        - npm install
        - npm ci
        - npm run build
        # not sure why this seems to get copied on windows but not linux...
        - mkdir -p $SP_DIR/ray/dashboard/client             # [not win]
        - cp -R ./build $SP_DIR/ray/dashboard/client/build  # [not win]
    requirements:
      host:
        - nodejs <18
        - python
      run:
        - python
        - {{ pin_subpackage('ray-default', exact=True) }}
        - typing-extensions
        - async-timeout
    test:
      imports:
        - ray.dashboard
      commands:
        - python -c "import ray; ray.init(include_dashboard=True)"

  - name: ray-debug
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('ray-core', exact=True) }}
        - py-spy >=0.2.0
    test:
      imports:
        # there doesn't appear to be a debug specific module
        - ray

  - name: ray-client
    build:
      # Holding off on ray-client. defaults does not contain the kubernetes package and there is a bit
      # to bring in for this.
      skip: true
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('ray-core', exact=True) }}
        - grpcio !=1.56.0  # [osx]
        - grpcio
    test:
      imports:
        # there doesn't appear to be a client module, not sure how to test this
        - ray

  - name: ray-rllib
    build:
      entry_points:
        - rllib = ray.rllib.scripts:cli
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('ray-tune', exact=True) }}
        - dm-tree
        - gymnasium ==0.26.3
        - lz4
        - pyyaml
        - scikit-image
        - scipy
        - typer
        - rich
    test:
      imports:
        - ray.rllib
      commands:
        # some interaction with rich and the test runner in azure
        # xref https://github.com/Textualize/rich/issues/2411 ?
        - python -c "import subprocess, os; os.environ['PYTHONIOENCODING']='utf-8'; subprocess.run(['rllib', '--help'], capture_output=True, check=True)"

  - name: ray-data
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('ray-core', exact=True) }}
        - numpy >=1.20
        - pandas >=1.3
        - pyarrow >=6.0.1
        - fsspec
    test:
      imports:
        - ray.data

  - name: ray-serve
    build:
      # starlette (starlette-base) and fastapi are missing in defaults
      skip: True
      entry_points:
        - serve = ray.serve.scripts:cli
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('ray-default', exact=True) }}
        - aiorwlock
        - requests
        - uvicorn
        # TODO: fastapi and starlette (starlette-base) are missing in defaults
        #- fastapi
        #- starlette
    test:
      imports:
        - ray.serve

  - name: ray-tune
    build:
      entry_points:
        - tune = ray.tune.scripts:cli
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('ray-default', exact=True) }}
        - pandas
        - pyarrow >=6.0.1
        - requests
        - tensorboardX >=1.9
    test:
      imports:
        - ray.tune

  - name: ray-train
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('ray-tune', exact=True) }}
    test:
      imports:
        - ray.train

  # the various ray[extra] installs, alphabetically
  - name: ray-air
    build:
      # ray-serve is not yet available
      skip: True
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('ray-data', exact=True) }}
        #- {{ pin_subpackage('ray-serve', exact=True) }}
        - {{ pin_subpackage('ray-train', exact=True) }}
        - {{ pin_subpackage('ray-tune', exact=True) }}
    test:
      imports:
        - ray.air

  - name: ray-observability
    build:
      # None of the dependencies are on defaults.
      skip: true
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('ray-default', exact=True) }}
        - opentelemetry-api
        - opentelemetry-sdk
        - opentelemetry-exporter-otlp
    test:
      commands:
        - echo "no tests for ray-observability, it is a convenience bundle"

about:
  home: https://www.ray.io/
  license: Apache-2.0
  license_family: Apache
  license_file:
    - LICENSE
    - licenses/abseil-LICENSE.txt
    - licenses/antirez-redis-COPYING.txt
    - licenses/arrow-LICENSE.txt
    - licenses/boost-LICENSE_1_0.txt
    - licenses/boringssl-LICENSE.txt
    - licenses/deckarep-golang-set-LICENSE.txt
    - licenses/flatbuffers-LICENSE.txt
    - licenses/gabime-spdlog-LICENSE.txt
    - licenses/gflags-COPYING.txt
    - licenses/glog-COPYING.txt
    - licenses/go-logr-LICENSE.txt
    - licenses/googletest-LICENSE.txt
    - licenses/grpc-LICENSE.txt
    - licenses/msgpack-COPYING.txt
    - licenses/onsi-ginkgo-LICENSE.txt
    - licenses/onsi-gomega-LICENSE.txt
    - licenses/opencensus-LICENSE.txt
    - licenses/opencensus-proto-LICENSE.txt
    - licenses/prometheus-LICENSE.txt
    - licenses/redis-hiredis-COPYING.txt
    - licenses/tporadowski-redis-license.txt
    - licenses/zlib-LICENSE.txt
  summary: Ray is a fast and simple framework for building and running distributed applications.
  description: |
    Ray is a fast and simple framework for building and running
    distributed applications. It is split into ray-core, ray-default,
    ray-dashboard, ray-serve, ray-rllib, ray-client, ray-data, ray-tune,
    ray-train, ray-air, ray-observability and ray-all packages.
  doc_url: https://docs.ray.io/en/latest/
  dev_url: https://github.com/ray-project/ray

extra:
  recipe-maintainers:
    - dHannasch
    - h-vetinari
    - vnlitvinov
    - krfricke
