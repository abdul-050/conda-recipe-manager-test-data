{% set version = '0.32.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-git2r
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/git2r_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/git2r/git2r_{{ version }}.tar.gz
  sha256: 1b5d254c0c684a56751d26d482823d0006964eb1f55c558f365d037f5e984671

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: getPass
requirements:
  build:
    - gnuconfig                    # [unix]
    - {{ compiler('c') }}          # [not win]
    - {{ compiler('m2w64_c') }}    # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}sed               # [win]
    - {{ posix }}grep              # [win]
    - {{ posix }}autoconf
    - {{ posix }}automake          # [not win]
    - {{ posix }}automake-wrapper  # [win]
    - {{ posix }}pkg-config
    - {{ posix }}make
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - libgit2                      # [not win]
    - libssh2
    - openssl
    - zlib
  run:
    - r-base
    - {{ native }}gcc-libs         # [win]
    - libssh2
    - openssl
    - zlib

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('git2r')"           # [not win]
    - "\"%R%\" -e \"library('git2r')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://docs.ropensci.org/git2r/ (website), https://github.com/ropensci/git2r
  license: GPL-2
  summary: Interface to the 'libgit2' library, which is a pure C implementation of the 'Git'
    core methods. Provides access to 'Git' repositories to extract data and running
    some basic 'Git' commands.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - colinbrislawn
    - conda-forge/r
    - jdblischak

# The original CRAN metadata for this package was:

# Package: git2r
# Title: Provides Access to Git Repositories
# Description: Interface to the 'libgit2' library, which is a pure C implementation of the 'Git' core methods. Provides access to 'Git' repositories to extract data and running some basic 'Git' commands.
# Version: 0.32.0
# License: GPL-2
# Copyright: See COPYRIGHTS file.
# URL: https://docs.ropensci.org/git2r/ (website), https://github.com/ropensci/git2r
# BugReports: https://github.com/ropensci/git2r/issues
# Maintainer: Stefan Widgren <stefan.widgren@gmail.com>
# Author: See AUTHORS file.
# Imports: graphics, utils
# Depends: R (>= 3.4)
# Suggests: getPass
# Type: Package
# Biarch: true
# NeedsCompilation: yes
# SystemRequirements: By default, git2r uses a system installation of the libgit2 headers and library. However, if a system installation is not available, builds and uses a bundled version of the libgit2 source. zlib headers and library. OpenSSL headers and library (non-macOS). LibSSH2 (optional on non-Windows) to enable the SSH transport.
# Collate: 'blame.R' 'blob.R' 'branch.R' 'bundle_r_package.R' 'checkout.R' 'commit.R' 'config.R' 'contributions.R' 'credential.R' 'diff.R' 'fetch.R' 'git2r.R' 'index.R' 'libgit2.R' 'merge.R' 'note.R' 'odb.R' 'plot.R' 'pull.R' 'punch_card.R' 'push.R' 'reference.R' 'reflog.R' 'refspec.R' 'remote.R' 'repository.R' 'reset.R' 'revparse.R' 'sha.R' 'signature.R' 'stash.R' 'status.R' 'tag.R' 'time.R' 'tree.R' 'when.R'
# Encoding: UTF-8
# RoxygenNote: 7.2.3
# Packaged: 2023-04-12 19:47:19 UTC; stefan
# Repository: CRAN
# Date/Publication: 2023-04-12 21:00:03 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
