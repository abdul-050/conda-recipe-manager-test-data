{% set version = '5.97' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-quantreg
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/quantreg_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/quantreg/quantreg_{{ version }}.tar.gz
  sha256: 87e7de5776dee936ef0809dcc9ac2e0d51a7580368e6defa12ec21276a676da1

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: interp, rgl, logspline, nor1mix, Formula, zoo, R.rsp, conquer
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('fortran') }}        # [not win]
    - {{ compiler('m2w64_fortran') }}  # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base
    - r-mass
    - r-matrix
    - r-matrixmodels
    - r-sparsem
    - r-survival

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-mass
    - r-matrix
    - r-matrixmodels
    - r-sparsem
    - r-survival

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('quantreg')"           # [not win]
    - "\"%R%\" -e \"library('quantreg')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://www.r-project.org
  license: GPL-2
  summary: 'Estimation and inference methods for models for conditional quantile functions: Linear
    and nonlinear parametric and non-parametric (total variation penalized) models for
    conditional quantiles of a univariate response and several methods for handling
    censored survival data.  Portfolio selection methods based on expected shortfall
    risk are also now included. See Koenker, R. (2005) Quantile Regression, Cambridge
    U. Press, <doi:10.1017/CBO9780511754098> and Koenker, R. et al. (2017) Handbook
    of Quantile Regression, CRC Press, <doi:10.1201/9781315120256>.'
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - johanneskoester
    - bgruening
    - mingwandroid

# The original CRAN metadata for this package was:

# Package: quantreg
# Title: Quantile Regression
# Description: Estimation and inference methods for models for conditional quantile functions: Linear and nonlinear parametric and non-parametric (total variation penalized) models for conditional quantiles of a univariate response and several methods for handling censored survival data.  Portfolio selection methods based on expected shortfall risk are also now included. See Koenker, R. (2005) Quantile Regression, Cambridge U. Press, <doi:10.1017/CBO9780511754098> and Koenker, R. et al. (2017) Handbook of Quantile Regression, CRC Press, <doi:10.1201/9781315120256>.
# Version: 5.97
# Authors@R: c( person("Roger", "Koenker",  role = c("cre","aut"), email =  "rkoenker@illinois.edu"), person("Stephen", "Portnoy",  role = c("ctb"), comment = "Contributions to Censored QR code", email =  "sportnoy@illinois.edu"), person(c("Pin", "Tian"), "Ng",  role = c("ctb"), comment = "Contributions to Sparse QR code", email =  "pin.ng@nau.edu"), person("Blaise", "Melly",  role = c("ctb"), comment = "Contributions to preprocessing code", email =  "mellyblaise@gmail.com"), person("Achim", "Zeileis",  role = c("ctb"), comment = "Contributions to dynrq code essentially identical to his dynlm code", email =  "Achim.Zeileis@uibk.ac.at"), person("Philip", "Grosjean",  role = c("ctb"), comment = "Contributions to nlrq code", email =  "phgrosjean@sciviews.org"), person("Cleve", "Moler",  role = c("ctb"), comment = "author of several linpack routines"), person("Yousef", "Saad",  role = c("ctb"), comment = "author of sparskit2"), person("Victor", "Chernozhukov",  role = c("ctb"), comment = "contributions to extreme value inference code"), person("Ivan", "Fernandez-Val",  role = c("ctb"), comment = "contributions to extreme value inference code"), person(c("Brian", "D"), "Ripley",  role = c("trl","ctb"), comment = "Initial (2001) R port from S (to my everlasting shame -- how could I have been so slow to adopt R!) and for numerous other suggestions and useful advice", email =  "ripley@stats.ox.ac.uk"))
# Maintainer: Roger Koenker <rkoenker@illinois.edu>
# Repository: CRAN
# Depends: R (>= 3.5), stats, SparseM
# Imports: methods, graphics, Matrix, MatrixModels, survival, MASS
# Suggests: interp, rgl, logspline, nor1mix, Formula, zoo, R.rsp, conquer
# License: GPL (>= 2)
# URL: https://www.r-project.org
# NeedsCompilation: yes
# VignetteBuilder: R.rsp
# Packaged: 2023-08-19 12:48:42 UTC; roger
# Author: Roger Koenker [cre, aut], Stephen Portnoy [ctb] (Contributions to Censored QR code), Pin Tian Ng [ctb] (Contributions to Sparse QR code), Blaise Melly [ctb] (Contributions to preprocessing code), Achim Zeileis [ctb] (Contributions to dynrq code essentially identical to his dynlm code), Philip Grosjean [ctb] (Contributions to nlrq code), Cleve Moler [ctb] (author of several linpack routines), Yousef Saad [ctb] (author of sparskit2), Victor Chernozhukov [ctb] (contributions to extreme value inference code), Ivan Fernandez-Val [ctb] (contributions to extreme value inference code), Brian D Ripley [trl, ctb] (Initial (2001) R port from S (to my everlasting shame -- how could I have been so slow to adopt R!) and for numerous other suggestions and useful advice)
# Date/Publication: 2023-08-19 13:50:05 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
