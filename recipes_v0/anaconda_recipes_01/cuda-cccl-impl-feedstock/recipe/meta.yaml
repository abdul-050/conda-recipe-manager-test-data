{% set name = "cuda-cccl-impl" %}
{% set version = "2.0.1" %}
{% set thrust_version = "2.0.1" %}
{% set cub_version = "2.0.1" %}
{% set libcudacxx_version = "1.9.0" %}
{% set platform = "linux-x86_64" %}  # [linux64]
{% set platform = "linux-ppc64le" %}  # [ppc64le]
{% set platform = "linux-sbsa" %}  # [aarch64]
{% set platform = "windows-x86_64" %}  # [win]
{% set extension = "tar.gz" %}  # [not win]
{% set extension = "zip" %}  # [win]

# CUDA C++ Core Libraries (CCCL) includes thrust, cub, and libcudacxx. These are header-only libraries.
# The cuda-cccl-impl package ships CCCL headers in the environment's include directory for use in downstream recipes that require CCCL. It follows CCCL upstream versioning. Use this package to say, "I want a specific version of CCCL headers when building my package (which may be newer than the versions shipped in the latest CUDA Toolkit)."
# The cuda-cccl_{{ target_platform }} package (e.g. cuda-cccl_linux-64) ships CCCL headers in 'targets/.../include' that can be used by nvcc, the CUDA compiler. It follows CUDA Toolkit versioning. This package should only be a dependency of the cuda-cudart / cuda-nvcc packages that require CCCL to function. It is target-specific to allow for cross-compilation, as a dependency of cuda-nvcc.
# The cuda-cccl package is a metapackage that depends on cuda-cccl-impl and cuda-cccl_{{ target_platform }} to ensure that versions are consistent. Use this package to say, "I want to build with the thrust headers that shipped with CUDA Toolkit X.Y" by adding dependencies on `cuda-cccl` and `cuda-version X.Y`.

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  - url: https://github.com/NVIDIA/thrust/archive/refs/tags/{{ thrust_version }}.{{ extension }}
    folder: thrust
    sha256: 06df373cf487cf3710be6798bc5441a03685b78e5c1338e2f14005f7ccd030e6  # [linux]
    sha256: 39a9fc88b0b06da118cc3ed28cbfca27b2a7ae192877996cab1295176ceed65e  # [win]
  - url: https://github.com/NVIDIA/cub/archive/refs/tags/{{ cub_version }}.{{ extension }}
    folder: cub
    sha256: beeef0962c87eca994db06cb9e9168a71c63fb369398a5b5f1db923140814701  # [linux]
    sha256: 22308facf62421d6dd2489b9554ffa4908dca13d3921a3e7f2965c5a6984cd20  # [win]
  - url: https://github.com/NVIDIA/libcudacxx/archive/refs/tags/{{ libcudacxx_version }}.{{ extension }}
    folder: libcudacxx
    sha256: 05b1435ad65f5bdef1bb8d1eb29dc8f0f7df34c01d77bf8686687a4603588bce  # [linux]
    sha256: d7864460ce8def8e0620cb9dd891e94299ade75eac75aa96b34001af3cdb074c  # [win]

build:
  number: 1
  skip: true  # [osx or (linux and s390x)]

requirements:
  run_constrained:
    # Prevent clobbering with cccl
    - cccl <0.0.0a0

test:
  commands:
    - test -d $PREFIX/lib/cmake/thrust      # [linux]
    - test -d $PREFIX/lib/cmake/cub         # [linux]
    - test -d $PREFIX/lib/cmake/libcudacxx  # [linux]
    - test -d $PREFIX/include/thrust        # [linux]
    - test -d $PREFIX/include/cub           # [linux]
    - test -d $PREFIX/include/cuda          # [linux]
    - test -d $PREFIX/include/nv            # [linux]
    - if not exist %LIBRARY_LIB%\cmake\thrust exit 1      # [win]
    - if not exist %LIBRARY_LIB%\cmake\cub exit 1         # [win]
    - if not exist %LIBRARY_LIB%\cmake\libcudacxx exit 1  # [win]
    - if not exist %LIBRARY_INC%\thrust exit 1  # [win]
    - if not exist %LIBRARY_INC%\cub exit 1     # [win]
    - if not exist %LIBRARY_INC%\cuda exit 1    # [win]
    - if not exist %LIBRARY_INC%\nv exit 1      # [win]

about:
  home: https://developer.nvidia.com/cuda-toolkit
  license_file:
    - cub/LICENSE.TXT
    - thrust/LICENSE
    - libcudacxx/LICENSE.TXT
  license: BSD-3-Clause AND Apache-2.0
  license_url: https://docs.nvidia.com/cuda/eula/index.html
  summary: 'CUDA C++ Core Libraries'
  description: |
    CUDA C++ Core Libraries
  doc_url: https://docs.nvidia.com/cuda/index.html

extra:
  recipe-maintainers:
    - adibbley
