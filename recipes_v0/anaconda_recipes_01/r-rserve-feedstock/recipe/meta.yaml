{% set version = '1.8-11' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-rserve
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/Rserve_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/Rserve/Rserve_{{ version }}.tar.gz
  sha256: 9dfb1d68493f8cee5d2e12a1bfa604404834e11809f4c908d65b9100a9af1b85

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: RSclient
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}sed               # [win]
    - {{ posix }}grep              # [win]
    - {{ posix }}autoconf
    - {{ posix }}automake          # [not win]
    - {{ posix }}automake-wrapper  # [win]
    - {{ posix }}pkg-config
    - {{ posix }}make
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]

  host:
    - r-base

  run:
    - r-base
    - {{native}}gcc-libs         # [win]

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('Rserve')"           # [not win]
    - "\"%R%\" -e \"library('Rserve')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: http://www.rforge.net/Rserve/
  license: GPL-2
  summary: Rserve acts as a socket server (TCP/IP or local sockets) which allows binary requests
    to be sent to R. Every connection has a separate workspace and working directory.
    Client-side implementations are available for popular languages such as C/C++ and
    Java, allowing any application to use facilities of R without the need of linking
    to R code. Rserve supports remote connection, user authentication and file transfer.
    A simple R client is included in this package as well.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'
    - LICENSE

extra:
  recipe-maintainers:
    - croth1
    - mingwandroid

# The original CRAN metadata for this package was:

# Package: Rserve
# Version: 1.8-11
# Title: Binary R server
# Author: Simon Urbanek <Simon.Urbanek@r-project.org>
# Maintainer: Simon Urbanek <Simon.Urbanek@r-project.org>
# Depends: R (>= 1.5.0)
# Suggests: RSclient
# SystemRequirements: libR, GNU make
# Description: Rserve acts as a socket server (TCP/IP or local sockets) which allows binary requests to be sent to R. Every connection has a separate workspace and working directory. Client-side implementations are available for popular languages such as C/C++ and Java, allowing any application to use facilities of R without the need of linking to R code. Rserve supports remote connection, user authentication and file transfer. A simple R client is included in this package as well.
# License: GPL-2 | file LICENSE
# URL: http://www.rforge.net/Rserve/
# Biarch: true
# NeedsCompilation: yes
# Packaged: 2022-11-28 05:36:23 UTC; rforge
# Repository: CRAN
# Date/Publication: 2022-11-28 07:32:05 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
