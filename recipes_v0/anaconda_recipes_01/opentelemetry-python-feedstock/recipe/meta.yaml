{% set author = "open-telemetry" %}
{% set name = "opentelemetry" %}
{% set version = "1.15.0" %}
{% set sha256 = "98b26b1c0c31bf974ddfd5604b45796312ba10b10fb24b2adc05ae999fa32fa8" %}
{% set urlbase = "https://github.com/" + author + "/" + name + "-python" %}

# We are making heavy use of macros and variables here to ensure a
# consistent recipe structure across all outputs. Use "conda render
# recipe" to examine and/or debug the fully rendered output.

# Any dependency that appears in more than once recipe should be
# encapsulated as a variable to ensure consistent pinning.
{% set protobuf_dep   = "protobuf >=3.19,<4.0a0" %}
{% set grpcio_dep     = "grpcio >=1.0.0,<2.0.0a0" %}
{% set googleapis_dep = "googleapis-common-protos >=1.52,<2.0a0" %}
{% set requests_dep   = "requests >=2.7,<3.0.0a0" %}
{% set backoff_dep    = "backoff >=1.10.0,<3.0.0a0" %}

# Add opentelemetry dependencies simply by providing their
# suffixes as additional arguments; e.g., 'api', 'sdk'. Add other
# dependencies by supplying them as a list intended 6 spaces.
{% macro header(submodule, which, subdir) -%}
{%- set subdir = ((subdir + '/') if subdir else '') + 'opentelemetry-' + submodule -%}
    about:
      summary: OpenTelemetry Python | {{ which }}
      home: {{ urlbase }}/tree/main/{{ subdir }}
      license: Apache-2.0
      license_family: Apache
      license_file: LICENSE
      doc_url: https://opentelemetry-python.readthedocs.io
      doc_source_url: {{ urlbase }}/tree/main/docs
      dev_url: {{ urlbase }}
      description: OpenTelemetry, also known as OTel for short, is a vendor-neutral
        open-source observability framework for instrumenting, generating, collecting,
        and exporting telemetry data such as traces, metrics, logs. As an industry
        standard, it is natively supported by a number of vendors.
    build:
      script: cd {{ subdir }} && python -m pip install . -vv --no-deps
    requirements:
      host:
        - python
        - pip
        - setuptools
        - wheel
      run:
        - python
        {% for arg in varargs %}
        - {{ pin_subpackage(name + '-' + arg, exact=True) }}
        {%- endfor %}
{%- endmacro %}

# Add the imports to test as a list indented 4 spaces.
# Add additional test dependencies as additional arguments.
{% macro test_imports(submodule='', subdir='') -%}
{%- set subdir = ((subdir + '/') if subdir else '') + 'opentelemetry-' + submodule -%}
    test:
      commands:
        - pip check
        {%- if submodule %}
        - pytest -v {{ subdir }}/tests
        {%- endif %}
      requires:
        - pip
      {%- if submodule %}
        - pytest
        - pytest-benchmark
        - flaky
        - {{ name }}-test-utils
        {% for arg in varargs %}
        - {{ arg }}
        {%- endfor %}
      source_files:
        - {{ subdir }}/tests
      {%- endif %}
      imports:
{%- endmacro %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: {{ urlbase }}/archive/refs/tags/v{{ version }}.tar.gz
  sha256: {{ sha256 }}
  patches:
    # https://github.com/open-telemetry/opentelemetry-python/issues/2778
    # conda doesn't seem to have this problem
    - grpcio-version.patch

build:
  number: 2
  skip: true # [py<37]

outputs:
  - name: {{ name }}-api
    {{ header('api', 'API', '') }}
        - deprecated >=1.2.6,<2.0a0
        - setuptools >=16.0
    {{ test_imports('api', '') }}
        - opentelemetry
        - opentelemetry.attributes
        - opentelemetry.baggage
        - opentelemetry.context
        - opentelemetry.metrics
        - opentelemetry.propagate
        - opentelemetry.propagators
        - opentelemetry.trace
        - opentelemetry.util
        - opentelemetry.environment_variables
        - opentelemetry.version

  - name: {{ name }}-semantic-conventions
    {{ header('semantic-conventions', 'Semantic Conventions', '') }}
    {{ test_imports('semantic-conventions', '') }}
        - opentelemetry.semconv
        - opentelemetry.semconv.resource
        - opentelemetry.semconv.trace
        - opentelemetry.semconv.version

  - name: {{ name }}-sdk
    {{ header('sdk', 'SDK', '', 'api', 'semantic-conventions') }}
        - typing-extensions >=3.7.4
    {{ test_imports('sdk', '') }}
        - opentelemetry.sdk
        - opentelemetry.sdk.error_handler
        - opentelemetry.sdk.metrics
        - opentelemetry.sdk.resources
        - opentelemetry.sdk.trace
        - opentelemetry.sdk.util
        - opentelemetry.sdk.environment_variables
        - opentelemetry.sdk.version

  - name: {{ name }}-proto
    {{ header('proto', 'Protobuf', '') }}
        - {{ protobuf_dep }}
    {{ test_imports('proto', '') }}
        - opentelemetry.proto
        - opentelemetry.proto.collector
        - opentelemetry.proto.common
        - opentelemetry.proto.metrics
        - opentelemetry.proto.resource
        - opentelemetry.proto.trace
        - opentelemetry.proto.version

  - name: {{ name }}-exporter-jaeger-proto-grpc
    {{ header('exporter-jaeger-proto-grpc', 'Jaeger Protobuf Exporter', 'exporter', 'sdk') }}
        - {{ grpcio_dep }}
        - {{ googleapis_dep }}
    {{ test_imports('exporter-jaeger-proto-grpc', 'exporter', 'pytest-grpc') }}
        - opentelemetry.exporter.jaeger.proto.grpc
        - opentelemetry.exporter.jaeger.proto.grpc.gen
        - opentelemetry.exporter.jaeger.proto.grpc.send
        - opentelemetry.exporter.jaeger.proto.grpc.translate
        - opentelemetry.exporter.jaeger.proto.grpc.util
        - opentelemetry.exporter.jaeger.proto.grpc.version

  - name: {{ name }}-exporter-jaeger-thrift
    {{ header('exporter-jaeger-thrift', 'Jaeger Thrift Exporter', 'exporter', 'sdk') }}
        - thrift >=0.10.0
    {{ test_imports('exporter-jaeger-thrift', 'exporter') }}
        - opentelemetry.exporter.jaeger.thrift
        - opentelemetry.exporter.jaeger.thrift.gen
        - opentelemetry.exporter.jaeger.thrift.translate
        - opentelemetry.exporter.jaeger.thrift.send
        - opentelemetry.exporter.jaeger.thrift.version

  - name: {{ name }}-exporter-jaeger
    {{ header('exporter-jaeger', 'Jaeger Exporters', 'exporter', 'exporter-jaeger-proto-grpc','exporter-jaeger-thrift') }}
    {{ test_imports('exporter-jaeger', 'exporter') }}
        - opentelemetry.exporter.jaeger.version

  - name: {{ name }}-exporter-opencensus
    {{ header('exporter-opencensus', 'OpenCensus Exporter', 'exporter', 'sdk') }}
        - {{ grpcio_dep }}
        - {{ protobuf_dep }}
        - opencensus-proto >=0.1.0,<1.0.0a0
    {{ test_imports('exporter-opencensus', 'exporter') }}
        - opentelemetry.exporter.opencensus
        - opentelemetry.exporter.opencensus.trace_exporter
        - opentelemetry.exporter.opencensus.util
        - opentelemetry.exporter.opencensus.version

  - name: {{ name }}-exporter-otlp-proto-grpc
    {{ header('exporter-otlp-proto-grpc', 'Collector Protobuf over gRPC Exporter', 'exporter', 'sdk', 'proto') }}
        - {{ grpcio_dep }}
        - {{ googleapis_dep }}
        - {{ backoff_dep }}
    {{ test_imports('exporter-otlp-proto-grpc', 'exporter', 'pytest-grpc') }}
        - opentelemetry.exporter.otlp.proto.grpc
        - opentelemetry.exporter.otlp.proto.grpc.metric_exporter
        - opentelemetry.exporter.otlp.proto.grpc.trace_exporter
        - opentelemetry.exporter.otlp.proto.grpc.exporter
        - opentelemetry.exporter.otlp.proto.grpc.version

  - name: {{ name }}-exporter-otlp-proto-http
    {{ header('exporter-otlp-proto-http', 'Collector Protobuf over HTTP Exporter', 'exporter', 'sdk', 'proto') }}
        - {{ requests_dep }}
        - {{ googleapis_dep }}
        - {{ backoff_dep }}
    {{ test_imports('exporter-otlp-proto-http', 'exporter', 'responses') }}
        - opentelemetry.exporter.otlp.proto.http
        - opentelemetry.exporter.otlp.proto.http.trace_exporter
        - opentelemetry.exporter.otlp.proto.http.version

  - name: {{ name }}-exporter-otlp
    {{ header('exporter-otlp', 'Collector Exporters', 'exporter', 'exporter-otlp-proto-grpc', 'exporter-otlp-proto-http') }}
    {{ test_imports('exporter-otlp', 'exporter') }}
        - opentelemetry.exporter.otlp.version

  - name: {{ name }}-exporter-prometheus
    {{ header('exporter-prometheus', 'Prometheus Exporter', 'exporter', 'sdk') }}
        - prometheus_client >=0.5.0,<1.0.0
    {{ test_imports('exporter-prometheus', 'exporter') }}
        - opentelemetry.exporter.prometheus
        - opentelemetry.exporter.prometheus.version

  - name: {{ name }}-exporter-zipkin-json
    {{ header('exporter-zipkin-json', 'Zipkin JSON Exporter', 'exporter', 'sdk') }}
        - {{ requests_dep }}
    {{ test_imports('exporter-zipkin-json', 'exporter') }}
        - opentelemetry.exporter.zipkin
        - opentelemetry.exporter.zipkin.encoder
        - opentelemetry.exporter.zipkin.json
        - opentelemetry.exporter.zipkin.node_endpoint

  - name: {{ name }}-exporter-zipkin-proto-http
    {{ header('exporter-zipkin-proto-http', 'Zipkin Protobuf Exporter', 'exporter', 'sdk', 'exporter-zipkin-json') }}
        - {{ protobuf_dep }}
        - {{ requests_dep }}
    {{ test_imports('exporter-zipkin-proto-http', 'exporter') }}
        - opentelemetry.exporter.zipkin.proto.http
        - opentelemetry.exporter.zipkin.proto.http.v2
        - opentelemetry.exporter.zipkin.proto.http.version

  - name: {{ name }}-exporter-zipkin
    {{ header('exporter-zipkin', 'Zipkin Exporters', 'exporter', 'exporter-zipkin-json','exporter-zipkin-proto-http') }}
    {{ test_imports('exporter-zipkin', 'exporter') }}
        - opentelemetry.exporter.zipkin.version

  - name: {{ name }}-opentracing-shim
    {{ header('opentracing-shim','OpenTracing Shim', 'shim', 'api') }}
        - opentracing >=2.0,<3.0.0a0
    {{ test_imports('opentracing-shim', 'shim') }}
        - opentelemetry.shim.opentracing_shim
        - opentelemetry.shim.opentracing_shim.util
        - opentelemetry.shim.opentracing_shim.version

  - name: {{ name }}-propagator-b3
    {{ header('propagator-b3', 'B3 Propagator', 'propagator', 'api') }}
    {{ test_imports('propagator-b3', 'propagator') }}
        - opentelemetry.propagators.b3
        - opentelemetry.propagators.b3.version

  - name: {{ name }}-propagator-jaeger
    {{ header('propagator-jaeger', 'Jaeger Propagator', 'propagator', 'api') }}
    {{ test_imports('propagator-jaeger', 'propagator') }}
        - opentelemetry.propagators.jaeger
        - opentelemetry.propagators.jaeger.version

  - name: {{ name }}-test-utils
    {{ header('test-utils', 'Test Utilities', 'tests', 'sdk') }}
        - asgiref >=3.0,<4.0.0a0
    {{ test_imports() }}
        - opentelemetry.test.asgitestutil
        - opentelemetry.test.concurrency_test
        - opentelemetry.test.globals_test
        - opentelemetry.test.httptest
        - opentelemetry.test.metrictestutil
        - opentelemetry.test.mock_textmap
        - opentelemetry.test.spantestutil
        - opentelemetry.test.test_base
        - opentelemetry.test.version
        - opentelemetry.test.wsgitestutil

extra:
  recipe-maintainers:
    - mariusvniekerk
    - mcg1969
